[package]
authors = ["Daniel Hayes <dkhayes117@annealed-engineering.com>, Lachlan Sneff <lachlan.sneff@gmail.com>"]
name = "golioth-rs"
edition = "2021"
version = "0.2.0"
resolver = "2"

[features]
default = ["nightly"]
nightly = ["embassy-executor/nightly", "embassy-nrf/nightly", "embassy-nrf/unstable-traits","embedded-io-async",]

[dependencies]
embedded-alloc = "0.5.0"
at-commands = "0.5.2"
coap-lite = { version = "0.11.2", default-features = false }
cortex-m = { version = "0.7.7", features = ["critical-section-single-core"] }
cortex-m-rt = "0.7.3"
defmt = "0.3.2"
defmt-rtt = "0.4.0"
embassy-futures = { version = "0.1"}
embassy-sync = { version = "0.1", features = ["defmt"] }
embassy-executor = { version = "0.2", features = ["defmt", "integrated-timers", "arch-cortex-m", "executor-thread"] }
embassy-time = { version = "0.1", features = ["defmt", "defmt-timestamp-uptime"] }
embassy-nrf = { version = "0", features = ["nrf9160-ns", "unstable-pac", "time-driver-rtc1", "defmt", "unstable-traits", "time", "gpiote"] }
embedded-io-async = { version = "0.5.0", optional = true, features = ["defmt-03"] }
futures = { version = "0.3.26", default-features = false, features = ["async-await"] }
heapless = { version = "0.7.16" }
nanorand = { version = "0.7.0",  default-features = false, features = ["wyrand"] }
nrf-modem = { version = "0.4.0", features = ["defmt"] }
nrfxlib-sys = { version = "2.1.0", features = ["arm-none-eabi-objcopy"] }
panic-probe = { version = "0.3.0", features = ["print-defmt"] }
serde = { version = "1.0", default-features = false, features = ["derive"] }
serde_json = { version = "1.0", default-features = false, features = ["alloc"] }
tinyrlibc = { version = "0.3.0"}

[patch.crates-io]
embassy-futures = { git = "https://github.com/embassy-rs/embassy.git" }
embassy-sync = { git = "https://github.com/embassy-rs/embassy.git" }
embassy-executor = { git = "https://github.com/embassy-rs/embassy.git" }
embassy-time = { git = "https://github.com/embassy-rs/embassy.git" }
embassy-nrf = { git = "https://github.com/embassy-rs/embassy.git" }
tinyrlibc = { git = "https://github.com/rust-embedded-community/tinyrlibc.git" }

# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = 3 # <-
overflow-checks = true # <-

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = 3 # <-
overflow-checks = true # <-

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = 'z' # <-
overflow-checks = false # <-

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = 3 # <-
overflow-checks = false # <-

# uncomment this to switch from the crates.io version of defmt to its git version
# check app-template's README for instructions
# [patch.crates-io]
# defmt = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version reported by `probe-run --version`" }
# defmt-rtt = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version reported by `probe-run --version`" }
# defmt-test = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version reported by `probe-run --version`" }
# panic-probe = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version reported by `probe-run --version`" }
